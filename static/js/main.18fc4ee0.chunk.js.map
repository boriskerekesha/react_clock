{"version":3,"sources":["components/clock/clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","today","Date","timeIs","timerId","this","window","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","Component","App","hasClock","clockName","timerClockName","getRandomName","value","now","toString","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"6MAWaA,EAAb,4MACEC,MAA8B,CAC5BC,MAAO,IAAIC,KACXC,OAAQ,WAHZ,EAMEC,QAAU,EANZ,uDAQE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,OAAOC,aAAY,WAChC,EAAKC,SAAS,CAAEP,MAAO,IAAIC,OAE3BO,QAAQC,KAAK,EAAKV,MAAMC,MAAMU,cAAcC,OAAO,IAAK,MACvD,OAbP,gCAgBE,SAAmBC,GACbA,EAAUC,OAAST,KAAKU,MAAMD,MAEhCL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDT,KAAKU,MAAMD,SAnBpE,kCAuBE,WACEG,cAAcZ,KAAKD,WAxBvB,oBA2BE,WACE,MAA0BC,KAAKL,MAAvBC,EAAR,EAAQA,MAAOE,EAAf,EAAeA,OAEf,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGb,KAAKU,MAAMD,OAFhB,WAKOX,EALP,KAOE,sBAAMe,UAAU,cAAhB,SACGjB,EAAMU,cAAcC,OAAO,IAAK,YAvC3C,GAA2BO,aCHdC,EAAb,4MACEpB,MAAyB,CACvBqB,UAAU,EACVC,UAAW,WAHf,EAMEC,eAAiB,EANnB,EAyBEC,cAAgB,WACd,IAAMC,EAAQvB,KAAKwB,MAAMC,WAAWf,OAAO,GAE3C,MAAM,SAAN,OAAgBa,IA5BpB,uDAQE,WAAqB,IAAD,OAClBG,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKvB,SAAS,CAAEa,UAAU,OAG5BO,SAASC,iBAAiB,SAAS,WACjC,EAAKrB,SAAS,CAAEa,UAAU,OAGxBhB,KAAKL,MAAMqB,WACbhB,KAAKkB,eAAiBjB,OAAOC,aAAY,WACvC,EAAKC,SAAS,CAAEc,UAAW,EAAKE,oBAC/B,SArBT,oBA+BE,WACE,MAAgCnB,KAAKL,MAA7BqB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,sBAAKJ,UAAU,MAAf,UACE,6CACCG,GAAY,cAAC,EAAD,CAAOP,KAAMQ,WArClC,GAAyBH,aCLzBa,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.18fc4ee0.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype ClockState = {\n  today: Date,\n  timeIs: string,\n};\n\ntype ClockProps = {\n  name: string;\n};\n\nexport class Clock extends Component <ClockProps, ClockState> {\n  state: Readonly<ClockState> = {\n    today: new Date(),\n    timeIs: 'time is',\n  };\n\n  timerId = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(() => {\n      this.setState({ today: new Date() });\n      // eslint-disable-next-line no-console\n      console.info(this.state.today.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<ClockProps>): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { today, timeIs } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {` ${timeIs} `}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport './App.scss';\nimport { Clock } from './components/clock';\n\ntype State = {\n  hasClock: boolean,\n  clockName: string,\n};\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  timerClockName = 0;\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n\n    document.addEventListener('click', () => {\n      this.setState({ hasClock: true });\n    });\n\n    if (this.state.hasClock) {\n      this.timerClockName = window.setInterval(() => {\n        this.setState({ clockName: this.getRandomName() });\n      }, 3300);\n    }\n  }\n\n  getRandomName = (): string => {\n    const value = Date.now().toString().slice(-4);\n\n    return `Clock-${value}`;\n  };\n\n  render() {\n    const { hasClock, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}